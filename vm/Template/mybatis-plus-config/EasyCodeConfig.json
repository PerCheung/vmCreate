{
  "author" : "Peter Cheung",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "mybatis-plus-config",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "mybatis-plus-config" : {
      "name" : "mybatis-plus-config",
      "elementList" : [ {
        "name" : "pom.xml.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"pom.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/pom\"))\n#[[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.7.14</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>路径</groupId>\n    <artifactId>包名</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>包名</name>\n    <description>包名</description>\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-starter-web</artifactId>\n            </dependency>\n            <!-- Sa-Token 权限认证，在线文档：https://sa-token.cc -->\n            <dependency>\n                <groupId>cn.dev33</groupId>\n                <artifactId>sa-token-spring-boot-starter</artifactId>\n                <version>1.35.0.RC</version>\n            </dependency>\n            <!-- Sa-Token 整合 Redis （使用 jackson 序列化方式） -->\n            <dependency>\n                <groupId>cn.dev33</groupId>\n                <artifactId>sa-token-redis-jackson</artifactId>\n                <version>1.35.0.RC</version>\n            </dependency>\n            <!--for string-->\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n            </dependency>\n            <!--for map-->\n            <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>1.9.4</version>\n            </dependency>\n            <!--for sql-->\n            <dependency>\n                <groupId>com.baomidou</groupId>\n                <artifactId>mybatis-plus-boot-starter</artifactId>\n                <version>3.5.5</version>\n            </dependency>\n            <!--for page-->\n            <dependency>\n                <groupId>com.github.pagehelper</groupId>\n                <artifactId>pagehelper-spring-boot-starter</artifactId>\n                <version>1.4.1</version>\n            </dependency>\n            <!--character verification-->\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-starter-validation</artifactId>\n            </dependency>\n            <!--swagger3-->\n            <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-boot-starter</artifactId>\n                <version>3.0.0</version>\n            </dependency>\n            <!-- knife4j -->\n            <dependency>\n                <groupId>com.github.xiaoymin</groupId>\n                <artifactId>knife4j-spring-boot-starter</artifactId>\n                <version>3.0.3</version>\n            </dependency>\n            <!--for mysql-->\n            <dependency>\n                <groupId>com.mysql</groupId>\n                <artifactId>mysql-connector-j</artifactId>\n                <scope>runtime</scope>\n            </dependency>\n            <!--lombok-->\n            <dependency>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-starter-test</artifactId>\n                <scope>test</scope>\n            </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>]]#"
      }, {
        "name" : "application.yaml.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"application.yaml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources\"))\nspring:\n  profiles:\n    active: test"
      }, {
        "name" : "application-dev.yaml.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"application-dev.yaml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources\"))\nserver:\n  port: 8081\n\n# Sa-Token 配置 (文档: https://sa-token.cc)\nsa-token:\n  # token 名称（同时也是 cookie 名称）\n  token-name: satoken\n  # token 有效期（单位：秒） 默认30天，-1 代表永久有效，当前设置90天\n  timeout: 7776000\n  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结\n  active-timeout: -1\n  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）\n  is-concurrent: false\n  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）\n  token-style: simple-uuid\n  # 是否输出操作日志\n  is-log: true\n  # 是否尝试从 cookie 里读取 Token，此值为 false 后，StpUtil.login(id) 登录时也不会再往前端注入Cookie\n  isReadCookie: false\n  # 是否尝试从 请求体 里读取 Token\n  isReadBody: false\n\nswagger:\n  enabled: false\n\nCrossOrigin:\n  enable: false\n\nspring:\n  # Redis配置\n  redis:\n    host: localhost\n    port: 6379\n    password:\n    # 操作0号数据库，默认有16个数据库\n    database: 0\n    lettuce:\n      pool:\n        # 最大连接数\n        max-active: 500\n        # 连接池最大阻塞等待时间\n        max-wait: 1000ms\n        # 连接池中的最大空闲连接\n        max-idle: 100\n        # 连接池中的最小空闲连接\n        min-idle: 0\n  # 配置文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 200MB\n      max-request-size: 200MB\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n  datasource:\n    username: root\n    password: root\n    # useUnicode是否使用Unicode字符集\n    # characterEncoding 当useUnicode设置为true时，指定字符编码\n    # serverTimezone 时区\n    # allowMultiQueries 是否允许执行多行sql\n    # connectTimeout 和数据库服务器建立socket连接时的超时，单位：毫秒，0表示永不超时\n    # socketTimeout 操作（读写）超时，单位：毫秒，0表示永不超时\n    url: jdbc:mysql://127.0.0.1:3306/database?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&connectTimeout=60000&socketTimeout=60000\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    hikari:\n      # 自动提交事务\n      auto-commit: true\n      # 最小连接数\n      minimum-idle: 30\n      # 最大连接数\n      maximum-pool-size: 200\n      # 配置获取连接等待超时的时间\n      connection-timeout: 60000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      idle-timeout: 60000\n      # 验证连接的查询语句\n      connection-test-query: SELECT 1 FROM DUAL\n\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  configuration:\n    # call-setters-on-nulls 参数的作用是查询的某一行某一列为null，是否返回\n    call-setters-on-nulls: true\n    # 禁用二级缓存\n    # cache-enabled: false\n    # 一级缓存指定为statement级别 效果为禁用一级缓存\n    # local-cache-scope: statement\n    # 日志\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\npagehelper:\n  # 默认值 false，当值为true时，pageSize=0或者RowBounds limit=0查询全部结果（相当于没有执行分页查询，但是返回结果仍然是Page类型）\n  page-size-zero: false\n  # 指定数据库，可以不配置，pagehelper插件会自动检测数据库的类型\n  helperDialect: mysql\n  # 分页合理化参数默认 false，当该参数设置为true 时，pageNum <= 0 时，默认显示第一页，pageNum 超过 pageSize 时，显示最后一页\n  reasonable: false\n  # 分页插件会根据查询方法的参数中，自动根据params配置的字段中取值，找到合适的值会自动分页\n  supportMethodsArguments: false\n  # 为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值\n  params: count=countSql\n\nknife4j:\n  # 开启增强配置\n  enable: true\n  basic:\n    enable: true\n    # Basic认证用户名\n    username: root\n    # Basic认证密码\n    password: root"
      }, {
        "name" : "application-prod.yaml.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"application-prod.yaml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources\"))\nserver:\n  port: 8081\n\nswagger:\n  enabled: false\n\nCrossOrigin:\n  enable: false\n\nspring:\n  # 配置文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 200MB\n      max-request-size: 200MB\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n  datasource:\n    username: root\n    password: root\n    # useUnicode是否使用Unicode字符集\n    # characterEncoding 当useUnicode设置为true时，指定字符编码\n    # serverTimezone 时区\n    # allowMultiQueries 是否允许执行多行sql\n    # connectTimeout 和数据库服务器建立socket连接时的超时，单位：毫秒，0表示永不超时\n    # socketTimeout 操作（读写）超时，单位：毫秒，0表示永不超时\n    url: jdbc:mysql://127.0.0.1:3306/database?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&connectTimeout=60000&socketTimeout=60000\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    hikari:\n      # 自动提交事务\n      auto-commit: true\n      # 最小连接数\n      minimum-idle: 100\n      # 最大连接数\n      maximum-pool-size: 500\n      # 配置获取连接等待超时的时间\n      connection-timeout: 60000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      idle-timeout: 60000\n      # 验证连接的查询语句\n      connection-test-query: SELECT 1 FROM DUAL\n\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  configuration:\n    # call-setters-on-nulls 参数的作用是查询的某一行某一列为null，是否返回\n    call-setters-on-nulls: true\n    # 禁用二级缓存\n    # cache-enabled: false\n    # 一级缓存指定为statement级别 效果为禁用一级缓存\n    # local-cache-scope: statement\n    # 日志\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\npagehelper:\n  # 默认值 false，当值为true时，pageSize=0或者RowBounds limit=0查询全部结果（相当于没有执行分页查询，但是返回结果仍然是Page类型）\n  page-size-zero: false\n  # 指定数据库，可以不配置，pagehelper插件会自动检测数据库的类型\n  helperDialect: mysql\n  # 分页合理化参数默认 false，当该参数设置为true 时，pageNum <= 0 时，默认显示第一页，pageNum 超过 pageSize 时，显示最后一页\n  reasonable: false\n  # 分页插件会根据查询方法的参数中，自动根据params配置的字段中取值，找到合适的值会自动分页\n  supportMethodsArguments: false\n  # 为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值\n  params: count=countSql"
      }, {
        "name" : "application-test.yaml.vm",
        "code" : "##设置回调\n$!callback.setFileName($tool.append(\"application-test.yaml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources\"))\nserver:\n  port: 8081\n\nswagger:\n  enabled: true\n\nCrossOrigin:\n  enable: true\n\nspring:\n  # 配置文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 200MB\n      max-request-size: 200MB\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  datasource:\n    username: root\n    password: root\n    # useUnicode是否使用Unicode字符集\n    # characterEncoding 当useUnicode设置为true时，指定字符编码\n    # serverTimezone 时区\n    # allowMultiQueries 是否允许执行多行sql\n    # connectTimeout 和数据库服务器建立socket连接时的超时，单位：毫秒，0表示永不超时\n    # socketTimeout 操作（读写）超时，单位：毫秒，0表示永不超时\n    url: jdbc:mysql://localhost:3306/database?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&connectTimeout=60000&socketTimeout=60000\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    hikari:\n      # 自动提交事务\n      auto-commit: true\n      # 最小连接数\n      minimum-idle: 10\n      # 最大连接数\n      maximum-pool-size: 200\n      # 配置获取连接等待超时的时间\n      connection-timeout: 60000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      idle-timeout: 60000\n      # 验证连接的查询语句\n      connection-test-query: SELECT 1 FROM DUAL\n\nmybatis-plus:\n  mapper-locations: classpath:mapper/*.xml\n  configuration:\n    # call-setters-on-nulls 参数的作用是查询的某一行某一列为null，是否返回\n    call-setters-on-nulls: true\n    # 禁用二级缓存\n    # cache-enabled: false\n    # 一级缓存指定为statement级别 效果为禁用一级缓存\n    # local-cache-scope: statement\n    # 日志\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\npagehelper:\n  # 默认值 false，当值为true时，pageSize=0或者RowBounds limit=0查询全部结果（相当于没有执行分页查询，但是返回结果仍然是Page类型）\n  page-size-zero: false\n  # 指定数据库，可以不配置，pagehelper插件会自动检测数据库的类型\n  helperDialect: mysql\n  # 分页合理化参数默认 false，当该参数设置为true 时，pageNum <= 0 时，默认显示第一页，pageNum 超过 pageSize 时，显示最后一页\n  reasonable: false\n  # 分页插件会根据查询方法的参数中，自动根据params配置的字段中取值，找到合适的值会自动分页\n  supportMethodsArguments: false\n  # 为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值\n  params: count=countSql"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}