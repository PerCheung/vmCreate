##设置回调
$!callback.setFileName($tool.append("application-dev.yaml"))
$!callback.setSavePath($tool.append($modulePath, "/src/main/resources"))
server:
  port: 8081

swagger:
  enabled: true

spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 15
      min-idle: 8
      max-active: 30
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 60
      validation-query: SELECT 1 FROM DUAL
      url: jdbc:mysql://localhost:3306/study_space?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: root
      password: root
      driver-class-name: com.mysql.cj.jdbc.Driver

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    # call-setters-on-nulls 参数的作用是查询的某一行某一列为null，是否返回
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

pagehelper:
  # 默认值false，当值为true时，pageSize=0或者RowBounds.limit=0查询全部结果（相当于没有执行分页查询，但是返回结果仍然是Page类型）
  page-size-zero: true
  # 指定数据库，可以不配置，pagehelper插件会自动检测数据库的类型
  helperDialect: mysql
  # 分页合理化参数默认false，当该参数设置为true 时，pageNum <= 0 时，默认显示第一页，pageNum 超过 pageSize 时，显示最后一页
  reasonable: true
  # 分页插件会根据查询方法的参数中，自动根据params配置的字段中取值，找到合适的值会自动分页
  supportMethodsArguments: true
  # 为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值
  params: count=countSql