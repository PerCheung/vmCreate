##设置回调
$!callback.setFileName($tool.append("R.java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/util"))

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}util;
import lombok.extern.slf4j.Slf4j;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import java.io.Serializable;

/**
 * 统一返回对象R
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Slf4j
@Data
@ApiModel("统一返回对象R")
public class R implements Serializable {
    private static final long serialVersionUID = $!tool.serial();
    @ApiModelProperty(value = "响应编码")
    private int code;
    @ApiModelProperty(value = "响应信息")
    private String message;
    @ApiModelProperty(value = "响应数据")
    private Object data;

    /**
     * 设置数据
     *
     * @param data 数据
     * @return R
     */
    public R setData(Object data) {
        this.data = data;
        return this;
    }

    /**
     * 操作成功
     *
     * @return R
     */
    public static R ok() {
        R r = new R();
        r.code = 200;
        r.message = "OK";
        return r;
    }

    /**
     * 认证授权失败。 包括密钥信息不正确；数字签名错误；授权已超时
     *
     * @return R
     */
    public static R fail() {
        R r = new R();
        r.code = 1401;
        r.message = "fail";
        return r;
    }

    /**
     * 系统异常
     *
     * @return R
     */
    public static R exp() {
        R r = new R();
        r.code = 1500;
        r.message = "exception";
        return r;
    }
}
